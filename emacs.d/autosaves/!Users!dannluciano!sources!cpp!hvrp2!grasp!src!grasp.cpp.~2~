#include "grasp.hpp"

using namespace std;

Solution* Grasp::better_solution = NULL;

void Grasp::Initialize()
{
  Grasp::better_solution = NULL;
}

Solution& Grasp::GreedyRandomizedConstruction()
{
  return Solution::GenerateContructionSolution();
}

Solution& Grasp::LocalSearch(Solution& solution)
{
  Solution* better_solution = new Solution(solution);
  solution.GenerateNeighborhood();
  solution.CalculateCost();
  for(size_t i = 0; i < 20; ++i)
  {
    if(solution.GetCost() <= better_solution.GetCost())
    {
      Solution better_solution = solution;
    }
    solution.GenerateNeighborhood();
    solution.CalculateCost();
    
    if(solution.GetCost() == better_solution.GetCost())
    {
      cout << "I have a problem" << endl;
    }
  }
  // delete &solution;
  return *better_solution;
}

void Grasp::UpdateSolution(Solution& solution)
{
  if ((Grasp::better_solution == NULL))
    {
      Grasp::better_solution = new Solution(solution);
    }
  else
    {
      if(solution.GetCost() < Grasp::better_solution->GetCost())
        {
          delete Grasp::better_solution;
          Grasp::better_solution = new Solution(solution);
        }
    } 
}

Solution& Grasp::Main()
{
  Grasp::Initialize();
  size_t i;
  for (i = 0; i < 200000; ++i)
    {
      Solution* solution = &Grasp::GreedyRandomizedConstruction();
      solution = &Grasp::LocalSearch(*solution);
      Grasp::UpdateSolution(*solution);
      delete solution;
    }
  return *Grasp::better_solution;
}
